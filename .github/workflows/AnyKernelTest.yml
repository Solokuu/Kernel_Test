name: AnyKernelTest

on:
  push:
  workflow_dispatch:
  repository_dispatch:
    types: [AnyKernelTest]

jobs:
  package:
    runs-on: ubuntu-latest
    env:
      VERSION: "LineageOS-20"
      ZIP_NO_KSU: "LineageOS-20-NoKernelSU.zip"
      ZIP_KSU: "LineageOS-20-KernelSU.zip"
      OUTPUT_DIR: "${{ github.workspace }}/output"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify kernel image exists
        run: |
          if [ ! -f "anykernel_test/Image.gz-dtb" ]; then
            echo "::error::Kernel image not found at anykernel_test/Image.gz-dtb"
            exit 1
          fi
          echo "Kernel image verified"

      - name: Set up packaging environment
        run: |
          sudo apt update
          sudo apt install -y zip tree
          mkdir -p outw/{true,false} AnyKernel3 ${{ env.OUTPUT_DIR }}
          cp -v anykernel_test/Image.gz-dtb outw/false/
          cp -v anykernel_test/Image.gz-dtb outw/true/
          echo "Environment setup completed"
          tree

      - name: Make scripts executable
        run: |
          chmod +x makezip.sh
          ls -la

      - name: Package kernels
        run: |
          echo "Starting packaging process"
          ./makezip.sh
          echo "Packaging completed"

      - name: Verify created packages
        run: |
          echo "Verifying output files:"
          ls -lh ${{ env.OUTPUT_DIR }}
          [ -f "${{ env.OUTPUT_DIR }}/$ZIP_NO_KSU" ] || { echo "::error::Missing $ZIP_NO_KSU"; exit 1; }
          [ -f "${{ env.OUTPUT_DIR }}/$ZIP_KSU" ] || { echo "::error::Missing $ZIP_KSU"; exit 1; }
          echo "All packages verified"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-packages
          path: ${{ env.OUTPUT_DIR }}/*.zip
          retention-days: 1

      - name: Create release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          files: |
            ${{ env.OUTPUT_DIR }}/$ZIP_NO_KSU
            ${{ env.OUTPUT_DIR }}/$ZIP_KSU
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "Kernel Package - $VERSION"
          tag_name: "v${{ github.run_number }}"
          body: |
            ## Kernel Packages for $VERSION

            ### Available Packages:
            - **Standard Version**: $ZIP_NO_KSU
            - **KernelSU Version**: $ZIP_KSU

            ### Installation:
            1. Download the appropriate zip file
            2. Flash in custom recovery (TWRP, OrangeFox, etc.)
            3. Reboot your device
          draft: false
          prerelease: false
