name: AnyKernelTest

on:
  push:
  workflow_dispatch:
  repository_dispatch:
    types: [AnyKernelTest]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["LineageOS-20"]

    env:
      VERSION: ${{ matrix.version }}
      ARCH: arm64
      KBUILD_BUILD_HOST: Github-Action
      KBUILD_BUILD_USER: "AnyKernelTest"
      CLANG_PATH: ${{ github.workspace }}/kernel/clang/bin

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pip jq libarchive-tools zip lib32z1-dev libbz2-dev pngcrush python-is-python3 libsdl1.2-dev autoconf libxml2-utils wget pkg-config unzip gawk imagemagick libc6-dev gcc-multilib patchelf gzip clang subversion optipng device-tree-compiler ccache gcc lzip rsync automake fastboot patch pngquant expat lzop libswitch-perl make libcap-dev adb libxml2 bison zlib1g-dev libtool squashfs-tools gperf flex libtinfo6 minicom liblz4-tool libmpfr-dev libssl-dev build-essential cmake g++-multilib re2c axel maven xsltproc g++ git git-lfs policycoreutils unrar ncurses-dev tree bc curl software-properties-common tar texinfo schedtool libc6-dev-i386 apt-utils
          sudo pip3 install yq

      - name: Set up ccache
        run: |
          echo "/usr/lib/ccache" >> $GITHUB_PATH
          echo "USE_CCACHE=1" >> $GITHUB_ENV

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Clone AnyKernel3
        run: |
          chmod +x anykernelTest.sh
          ./anykernelTest.sh

      - name: Set ZIP_NO_KSU and ZIP_KSU environment variables
        run: |
          echo "ZIP_NO_KSU=${{ env.VERSION }}-NoKernelSU.zip" >> $GITHUB_ENV

      - name: Make AnyKernel3 zip
        run: |
          chmod +x makezip.sh
          ./makezip.sh

      - name: Extract info for release
        run: |
          chmod +x extract.sh
          ./extract.sh

      - name: Make a release
        uses: softprops/action-gh-release@v1
        with:
          files: |
             ${{ github.workspace }}/${{ env.ZIP_NO_KSU }}
             ${{ github.workspace }}/${{ env.ZIP_KSU }}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: KernelSU Release - ${{ env.KERNELSU_VERSION }}
          tag_name: ${{ github.run_id }}
          body: |
             **Info:**
              - KernelSU Version: ${{ env.KERNELSU_VERSION }}.
              
              **Installation:**
              - Download desired zip file.
              - Flash the zip file in recovery using sideload or any other method.
            
              <details>
                <summary>Build Settings</summary>
                  ```
                  ${{ env.buildsettings }}
                  ```
              </details>
          draft: false
          prerelease: false
