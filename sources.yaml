LineageOS-20:
  kernel:
    - git clone https://github.com/HowWof/android_kernel_realme_mt6785.git -b lineage-20
  clang:
    - git clone --depth=1 https://gitlab.com/Jprimero15/lolz_clang.git -b main
  config:
    - cat << EOF >> arch/arm64/configs/lineage-nashc_defconfig
# --- Tryb monitora i iniekcja pakietów (Wi-Fi hacking) ---
CONFIG_NET_SCHED=y
CONFIG_NET_SCH_HTB=y
CONFIG_NET_SCH_INGRESS=y
CONFIG_MAC80211=y
CONFIG_MAC80211_RC_MINSTREL=y
CONFIG_MAC80211_RC_MINSTREL_HT=y
CONFIG_MAC80211_RC_DEFAULT_MINSTREL=y
CONFIG_WLAN=y
CONFIG_ATH9K_HTC=y                 # Dla TP-Link TL-WN722N v1
CONFIG_ATH9K_HTC_DEBUGFS=n       # Opcjonalne debugowanie
CONFIG_CFG80211=y
CONFIG_CFG80211_WEXT=y
CONFIG_NL80211_TESTMODE=y 
CONFIG_CFG80211_CERTIFICATION_ONUS=y 
# --- USB HID / Rubber Ducky / BadUSB ---
CONFIG_HID=y
CONFIG_HID_GENERIC=y
CONFIG_USB_HID=y
CONFIG_USB=y
CONFIG_USB_SUPPORT=y
CONFIG_USB_ARCH_HAS_HCD=y
CONFIG_USB_EHCI_HCD=y 
CONFIG_USB_GADGET=y
CONFIG_USB_CONFIGFS=y
CONFIG_USB_CONFIGFS_F_HID=y

# --- Bluetooth Hacking (Blueborne, KNOB, itp.) ---
CONFIG_BT=y
CONFIG_BT_RFCOMM=y
CONFIG_BT_RFCOMM_TTY=y
CONFIG_BT_BNEP=y
CONFIG_BT_BNEP_MC_FILTER=y
CONFIG_BT_BNEP_PROTO_FILTER=y
CONFIG_BT_HIDP=y
CONFIG_BT_HS=y
CONFIG_BT_LE=y
CONFIG_BT_HCIBTUSB=y
# --- Filesystem i debugowanie ---
CONFIG_IKCONFIG=y
CONFIG_IKCONFIG_PROC=y
CONFIG_OVERLAY_FS=y                 # Wymagane dla chroot Kali
CONFIG_KALLSYMS=y                  # Wymagane dla niektórych modułów
CONFIG_KPROBES=y                    # Dynamiczne hooki
EOF
    - make O=out ARCH=arm64 lineage-nashc_defconfig
  build:
    - ARCH=arm64 CROSS_COMPILE="${PWD}/clang/bin/aarch64-linux-gnu-" CROSS_COMPILE_COMPAT="${PWD}/clang/bin/arm-linux-gnueabi" CROSS_COMPILE_ARM32="${PWD}/clang/bin/arm-linux-gnueabi-" CLANG_TRIPLE=aarch64-linux-gnu- make -j$(nproc --all) LLVM=1 LLVM_IAS=1 LD=ld.lld AR=llvm-ar NM=llvm-nm AS=llvm-as OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip O=out
  target:
    - out/arch/arm64/boot/Image.gz-dtb
  anykernel:
    - nashc
  kernelSU:
    - stable-pin

Zenitsu:
  kernel:
    - git clone https://github.com/Killerpac/android_kernel_realme_mt6785 -b zenitsu-bak
  clang:
    - git clone --depth=1 https://gitlab.com/Jprimero15/lolz_clang.git -b main
  config:
    - make O=out ARCH=arm64 lineage-nashc_defconfig
  build:
    - ARCH=arm64 CROSS_COMPILE="${PWD}/clang/bin/aarch64-linux-gnu-" CROSS_COMPILE_COMPAT="${PWD}/clang/bin/arm-linux-gnueabi" CROSS_COMPILE_ARM32="${PWD}/clang/bin/arm-linux-gnueabi-" CLANG_TRIPLE=aarch64-linux-gnu- make -j$(nproc --all) LLVM=1 LLVM_IAS=1 LD=ld.lld AR=llvm-ar NM=llvm-nm AS=llvm-as OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip O=out
  target:
    - out/arch/arm64/boot/Image.gz-dtb
  anykernel:
    - nashc
  kernelSU:
    - stable-pin

DivestOS-13:
  kernel:
    - git clone https://github.com/HowWof/android_kernel_realme_mt6785.git -b divest-13
  clang:
    - git clone --depth=1 https://gitlab.com/Jprimero15/lolz_clang.git -b main
  config:
    - make O=out ARCH=arm64 lineage-nashc_defconfig
  build:
    - ARCH=arm64 CROSS_COMPILE="${PWD}/clang/bin/aarch64-linux-gnu-" CROSS_COMPILE_COMPAT="${PWD}/clang/bin/arm-linux-gnueabi" CROSS_COMPILE_ARM32="${PWD}/clang/bin/arm-linux-gnueabi-" CLANG_TRIPLE=aarch64-linux-gnu- make -j$(nproc --all) LLVM=1 LLVM_IAS=1 LD=ld.lld AR=llvm-ar NM=llvm-nm AS=llvm-as OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip O=out
  target:
    - out/arch/arm64/boot/Image.gz-dtb
  anykernel:
    - nashc
  kernelSU:
    - stable-pin


Sage-Android-14:
  kernel:
    - git clone https://github.com/Killerpac/android_kernel_realme_mt6785.git -b udc
  clang:
    - git clone --depth=1 https://gitlab.com/Jprimero15/lolz_clang.git -b main
  config:
    - make O=out ARCH=arm64 lineage-nashc_defconfig
  build:
    - ARCH=arm64 CROSS_COMPILE="${PWD}/clang/bin/aarch64-linux-gnu-" CROSS_COMPILE_COMPAT="${PWD}/clang/bin/arm-linux-gnueabi" CROSS_COMPILE_ARM32="${PWD}/clang/bin/arm-linux-gnueabi-" CLANG_TRIPLE=aarch64-linux-gnu- make -j$(nproc --all) LLVM=1 LLVM_IAS=1 LD=ld.lld AR=llvm-ar NM=llvm-nm AS=llvm-as OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip O=out
  target:
    - out/arch/arm64/boot/Image.gz-dtb
  anykernel:
    - nashc
  kernelSU:
    - stable-pin
    
Clean:
  out:
    - rm -rf out
  kernel:
    - make mrproper
  custom:
    - git status

# Stable-pin version of KernelSU is used by KernelSU.sh to replace placeholder (kernelsu-version) with the newest stable version from ksu_version.txt
KernelSU:
  version:
    stable-pin:
      - curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s v0.9.5
    stable:
      - curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -
    unstable:
      - curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main

AnyKernel3:
  version:
    nashc:
      - git clone https://github.com/HowWof/AnyKernel3.git -b master
    test:
      - echo "Test Success!"
